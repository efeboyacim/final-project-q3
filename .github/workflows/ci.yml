name: CI
on:
  push: { branches: [ main, master ] }
  pull_request: { branches: [ main, master ] }

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Poetry
        run: pip install poetry
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      - name: Install deps
        run: poetry install --no-interaction
      - name: Lint
        run: poetry run ruff check .
      - name: Type check
        run: poetry run mypy app
      - name: Test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: app
          DB_USER: postgres
          DB_PASSWORD: postgres
          SECRET_KEY: devsecret
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: "30"
          AWS_REGION: us-east-1
          S3_BUCKET: test-bucket
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
        run: poetry run pytest -q
  docker:
    if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
